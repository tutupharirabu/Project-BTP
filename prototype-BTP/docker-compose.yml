services:
    nginx:
        build:
            context: "./docker/nginx"
        depends_on:
            - php-fpm
        volumes:
            # SSL certificates (generated by docker/nginx/ssl/generate-keys.sh)
            - ./docker/nginx/ssl:/etc/nginx/ssl:ro
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
            - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
            - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
        ports:
            - "${NGINX_HOST_HTTPS_PORT:-443}:443"
            - "${NGINX_HOST_HTTP_PORT:-80}:80"
        networks:
            - sail
        extra_hosts:
            # Add host mapping for local development
            - "SpaceRentBTP-v2.local:127.0.0.1"
            - "localhost:127.0.0.1"

    php-fpm:
        build:
            context: "./docker/php-fpm"
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
            # Mount SSL certificates for PHP if needed
            - ./docker/nginx/ssl:/var/ssl:ro
        networks:
            - sail
        expose:
            - "9000"
        depends_on:
            - pgsql
            - redis
        environment:
            # SSL and app environment variables
            - SSL_ENABLED=true
            - APP_URL=https://SpaceRentBTP-v2.local
            - HTTPS=true
        extra_hosts:
            - "SpaceRentBTP-v2.local:127.0.0.1"
            - "localhost:127.0.0.1"
            
    pgsql:
        image: 'postgres:17'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'sail-pgsql:/var/lib/postgresql/data'
            - './docker/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    mailpit:
        image: 'axllent/mailpit:latest'
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail
networks:
    sail:
        driver: bridge
volumes:
    sail-pgsql:
        driver: local
    sail-redis:
        driver: local
