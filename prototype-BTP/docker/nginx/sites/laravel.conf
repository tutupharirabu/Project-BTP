# Komen ketika jalan lokal
upstream php-upstream {
    server php-fpm:9000;
}

server {
    listen 80;
    listen [::]:80;
    # Komen jika jalan di server prod
    # server_name SpaceRentBTP-v1.local localhost;

    # Komen ketika jalan lokal
    server_name _;

    root /var/www/app/public;
    index index.php index.html index.htm;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name SpaceRentBTP-v1.local localhost;
    root /var/www/laravel/current/public;
    index index.php index.html index.htm;

    # SSL Configuration with mkcert certificates
    ssl_certificate /etc/nginx/ssl/localhost.crt;
    ssl_certificate_key /etc/nginx/ssl/localhost.key;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    charset utf-8;

    # CRITICAL: Handle /build directory FIRST - bypass PHP completely
    location ^~ /build/ {
        # Direct file serving - no PHP processing
        alias /var/www/laravel/current/public/build/;
        
        # Try files directly, return 404 if not found
        try_files $uri =404;
        
        # Aggressive caching for all build assets
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable" always;
        
        # Enable gzip
        gzip on;
        gzip_static on;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/json application/manifest+json application/webmanifest;
        
        # Performance optimizations
        tcp_nodelay on;
        sendfile on;
        sendfile_max_chunk 1m;
        
        # Disable access log for static files
        access_log off;
        
        # Specific handling for manifest.webmanifest
        location ~ \.webmanifest$ {
            add_header Content-Type "application/manifest+json" always;
            add_header X-Content-Type-Options "nosniff" always;
        }
        
        # Security: Prevent PHP execution in build directory
        location ~ \.php$ {
            return 404;
        }
    }

    # Handle manifest.webmanifest at root level (if exists)
    location = /manifest.webmanifest {
        try_files $uri /build/manifest.webmanifest =404;
        
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable" always;
        add_header Content-Type "application/manifest+json" always;
        add_header X-Content-Type-Options "nosniff" always;
        
        access_log off;
    }

    # Service worker - no cache
    location ~ ^/(sw|service-worker)\.js$ {
        try_files $uri =404;
        
        expires off;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        
        access_log off;
    }

    # Static files optimization - BEFORE Laravel routing
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt|tar|zip|woff|woff2|ttf|otf|eot|svg|webp)$ {
        try_files $uri =404;
        
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable" always;
        
        # Remove ETags for better caching
        etag off;
        
        # Enable gzip
        gzip on;
        gzip_static on;
        
        # Performance
        tcp_nodelay on;
        sendfile on;
        
        access_log off;
    }

    # Laravel routing - AFTER static files
    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    # PHP processing - ONLY for non-static files
    location ~ \.php$ {
        # Security check - ensure file exists
        try_files $uri =404;
        
        fastcgi_pass php-upstream;
        fastcgi_index index.php;
        
        # Optimized buffer sizes
        fastcgi_buffers 32 32k;
        fastcgi_buffer_size 64k;
        fastcgi_busy_buffers_size 64k;
        
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS on;
        fastcgi_param SERVER_PORT 443;
        
        # Increased timeout for long operations
        fastcgi_read_timeout 600;
        fastcgi_send_timeout 600;
        fastcgi_connect_timeout 60;
        
        include fastcgi_params;
        
        # FastCGI cache for better performance (optional)
        # fastcgi_cache WEBAPP;
        # fastcgi_cache_valid 200 60m;
        # fastcgi_cache_bypass $no_cache;
        # fastcgi_no_cache $no_cache;
    }

    # Security: Deny access to hidden files
    location ~ /\.(?!well-known) {
        deny all;
    }

    # Deny access to Laravel directories
    location ~ ^/(storage|bootstrap/cache)/ {
        deny all;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt/;
        log_not_found off;
    }

    location = /favicon.ico {
        try_files $uri =404;
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable" always;
        access_log off;
        log_not_found off;
    }

    location = /robots.txt {
        try_files $uri =404;
        expires 1d;
        add_header Cache-Control "public, max-age=86400" always;
        access_log off;
        log_not_found off;
    }

    error_log /var/log/nginx/laravel_error.log;
    access_log /var/log/nginx/laravel_access.log;
}